<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xgn.cms.mapper.PageMapper">
  <resultMap id="BaseResultMap" type="com.xgn.cms.entity.Page">
    <id column="pageId" jdbcType="INTEGER" property="pageId" />
    <id column="version" jdbcType="INTEGER" property="version" />
    <id column="pageName" jdbcType="VARCHAR" property="pageName" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="minVersion" jdbcType="INTEGER" property="minVersion" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="platform" jdbcType="CHAR" property="platform" />
    <result column="editor" jdbcType="VARCHAR" property="editor" />
    <result column="createBy" jdbcType="VARCHAR" property="createBy" />
    <result column="projectId" jdbcType="INTEGER" property="projectId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from page
    where pageId = #{pageId,jdbcType=INTEGER}
      and version = #{version,jdbcType=INTEGER}
      and pageName = #{pageName,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xgn.cms.entity.Page">
    insert into page (pageId, version, pageName, 
      status, createTime, minVersion, 
      type, platform, editor, 
      createBy, projectId)
    values (#{pageId,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}, #{pageName,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{minVersion,jdbcType=INTEGER}, 
      #{type,jdbcType=VARCHAR}, #{platform,jdbcType=CHAR}, #{editor,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{projectId,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.xgn.cms.entity.Page">
    update page
    set status = #{status,jdbcType=CHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      minVersion = #{minVersion,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      platform = #{platform,jdbcType=CHAR},
      editor = #{editor,jdbcType=VARCHAR},
      createBy = #{createBy,jdbcType=VARCHAR},
      projectId = #{projectId,jdbcType=INTEGER}
    where pageId = #{pageId,jdbcType=INTEGER}
      and version = #{version,jdbcType=INTEGER}
      and pageName = #{pageName,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select pageId, version, pageName, status, createTime, minVersion, type, platform, 
    editor, createBy, projectId
    from page
    where pageId = #{pageId,jdbcType=INTEGER}
      and version = #{version,jdbcType=INTEGER}
      and pageName = #{pageName,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select pageId, version, pageName, status, createTime, minVersion, type, platform, 
    editor, createBy, projectId
    from page
  </select>
</mapper>